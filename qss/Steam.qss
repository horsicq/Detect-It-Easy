/* ################################## */
/* Config starts here. You can enable or disable parts by commenting (Use /* to comment and delete it to remove it */
/* ################################## */

/* Disables the scrollbar in the server/client list. Looks a lot cleaner. Scrolling is still possible with the scrollwheel */
QTreeView QScrollBar:vertical { 
	width: 0px;
}

/* Disables the server banner above the info frame. Teamspeak needs a restart to enable or disable properly */
MainWindow Banner {
	background: none;
	max-height: 0px;
	max-width: 0px;
}
/* You can find the full stylesheet reference here. Teamspeak changed some things though
http://qt-project.org/doc/qt-4.7/stylesheet-reference.html 
*/




QMainWindow	{ /* main teamspeak window. Place backgrounds for the entire teamspeak screen here. You can also use 'image' to place an extra image */
	background-image:url('qss/Steam/MainWindow/top-background.jpg'); /* The diagonal lines including a gradient on the top of the mainwindow */ 
	background-position: right top;
	background-repeat: repeat-x;
 	background-color: #383635;
	image: url('qss/Steam/MainWindow/logo.png');  /* The steam logo in the right top */
	image-position: right top;
	color: #e6ece0;
}

QWidget#MainWindowServerTabsWidget { /* Widget around and behind the treeview and infoframe. */
	border-top: 1px solid #6b6865;
	border-left: 1px solid #3a3837;
	border-right: 1px solid #3a3837;
	background-color: #383635;
	show-decoration-selected: 0;
	margin-top: 27px;
	margin-left: 10px;
	margin-right: 10px;
	padding: 3px;
}


MainWindow QWidget::pane { /* Resizable pane inside the QWidget section. (Includes TreeView and InfoFrame in the mainwindow) but also the Permissions overview. I'd recommend being more defined so it only changes the mainwindow if you want to use a background and dont have to worry abou the rest */
	top: 20px; 
	color: transparent;
	border: 1px solid #4d4b48;
	border-radius: 0px;
	margin-left: 16px;
	margin-right: 16px;  
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2f2e2d, stop:1 #171614);
	background-image: url('qss/Steam/Background.png');
	background-position: right top;
	background-repeat:no-repeat;
	background-attachment:fixed; /* Use 'fixed' if you want to make sure the image doesn't scroll along with the rest of the content of the component you put this in */
}

QFrame#bookmarksTopFrame { /* Top bar in the bookmarks manager */
	background-color: #2e3132;
	border-image: url('qss/Steam/Dialog/listview.png');
	border-top: 4px transparent;
	border-bottom: 4px transparent;
	border-right: 4px transparent;
	border-left: 4px transparent;
	color: #cbbf57;
}



/* ----------------------------------------------------------------	*/
/* 			 Chat Area || ChatWidget, ChatArea and ChatLine			*/
/* ---------------------------------------------------------------- */
QWidget#MainWindowChatWidget { /* Widget behind and around the chat area. Use this if you want to have a border or image around the chat area */
	margin-left: 10px;
	margin-right: 10px;
	background-color: #383635;
    show-decoration-selected: 0; 
}

ChatTab { /* The actual chat area on the MainWindow. Everything you put here actually goes INSIDE the chat box. Use the  widget if you want to put thigns behind it. */
/* 	THERE IS CURRENTLY NO WAY TO CHANGE THE COLOR OF USERS (Red text) AND CHANNELS (Blue text). KEEP THIS IN MIND! YOU WANT TO MAKE SURE TEXT IS ACTUALLY READABLE. 
	ALSO PLEASE POST IN ONE OF THE MANY THREADS ON THE TEAMSPEAK FORUMS ABOUT THIS. HOPEFULLY ENOUGH REQUESTS WILL GET THEM TO FIX THIS. IT IS POSSIBLE IN MUMBLE, SO SHOULD BE POSSIBLE IN TEAMSPEAK AS WELL */
	background-image:url('qss/Steam/top-lines.png');
	background-position: top;
	background-repeat: repeat-x;
	background-attachment: fixed;
	background-color: #383635;
	border: 1px solid #4d4b48;
	border-radius: 0px;
	color: #818181;
	padding-top: 2px;
	padding-right: 2px;
	padding-left: 10px;
	show-decoration-selected: 0;
}

ChatLineEdit { /* Chat line uder chat widget */
	border: 1px solid #4d4b48;
	border-radius: 0px;
	background-color: #383635;
	color: #a5a3a0;
}

QLineEdit { /* Editable text in dialogs*/
	border: 1px solid #4d4b48;
	border-radius: 0px;
	background-color: #383635;
	color: #a5a3a0;
}


QTextEdit#pluginDescTextEdit,	/* Larger inactive textboxes such as plugin description window */
QTextEdit#descriptionTextEdit,		
QTextEdit#vserverWelcomeTextEdit,
QLineEdit:read-only /* QLineEdit that can't be used because option is turned off or so */
{
	border: 1px solid #4d4b48;
	border-radius: 0px;
	background-color: transparent;
	color: #a5a3a0;
}


/* ----------------------------------------------------------------	*/
/* 								QTabBar								*/
/* ---------------------------------------------------------------- */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-894896ee-44bc-4282-871a-31ca3a19f683 */
/* #### */

MainWindow QTabWidget::tab-bar:top 		{ 	left: 4px; }    /* skins only the top tabs in the mainwindow. Used TabWidget because QTabBar positioning didn't work */
MainWindow QTabWidget::tab-bar:bottom	{ 	left: 16px;	}  /* skins only the bottom tabs in the mainwindow. Used TabWidget because QTabBar positioning didn't work*/

QTabBar::close-button { } /* Doesn't work. Supposed to be used to close tabs. Use ImprovedTabBarCloseButton instead. It's all the way at the bottom of the file */

QTabBar 				{	background-color: transparent; }  /* Background behind the tabs. QTabBar is only the size of the area of the tabs that are open */
MainWindow QTabBar::tab:only-one	{	padding-bottom: 3px; } /* The only only-one state skins the tab when there is ONLY ONE tab. You can also use :first and :last for the first and the last tab. I used this in my WoW skin */
 
QTabBar::tab { /* skins the actual tab. Be sure to check the results with different numbers of tabs */
	padding-left: 4px;
	padding-right: 10px;
	background-color: #4a4846;
	color: #c7c4c2;
	text-transform: uppercase;
	min-width: 8px;
	margin-right: 1px;
	margin-left: 1px;
	margin-bottom: 3px;
} 

ImprovedWidget QTabBar::tab { /* Fix a margin problem in the permission window with margin on the tab */
 margin-bottom: 3px;
 padding-bottom: 3px; 
}

QTabBar::tab:selected,
QTabBar::tab:selected:hover  /* Skins both the normally selected (Currently active) tab and the hover state of the active tab (The same in this case) */
{
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #6b6865, stop:0.3 #6b6865, stop:1 #383635);
	border: 0px solid #4d4b48;
	color: #e5e2df;
	margin-bottom: 0px; /* Uses different bottom margin to make sure the active tab is connected to the rest */
}

QTabBar::tab:hover /* Skins the hover state of the tab. */
{
	background-color: #666360;
	color: #e5e2df;
	margin-bottom: 3px;
}

/* ----------------------------------------------------------------	*/
/* 			QMenuBar | Top menu (Connections, Bookmarks)			*/
/* ---------------------------------------------------------------- */

QMenuBar { /* The top menu bar in the main window */
	margin-left: 10px;
	margin-top: 10px;
	margin-bottom: 25px;
  	background-color: transparent;
	color: #d6d6d6;
}

QMenuBar::item { /* An item on the top menu bar in the main window */
	background-color: transparent;
	color: #a09f94;
}

QMenuBar::item:selected, /* An active item on the top menu bar. Hover state and selected state works a bit weird, so you probably want to keep these the same */
QMenuBar::item:hover {
	border-image: url('qss/Steam/Misc/menu-hover.png') 3 3 3 3;
	border-top: 3px transparent;
	border-bottom: 3px transparent;
	border-right: 3px transparent;
	border-left: 3px transparent;
	color: #e5e2df;
}



/* ----------------------------------------------------------------	*/
/* 							QMenu | Right Click			*/
/* ---------------------------------------------------------------- */
QMenu { /* The context menu (Right Click menu) and the menu that drops down from the Menu Bar (The top menu in the main window). Both are the same and can't be skinned differently as far as I know */
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #3d3b3a); /* TRANSPARENT BACKGROUNDS DO NOT WORK WITH THIS MENU */
	color: #d1cfcd;
	border: 1px solid #4d4b48;
	border-radius: 10px;
    padding: 8px 8px 0;
	font-weight: bold;
}

QMenu::item {  /* An item in the context menu */ 
	background: transparent;
	font-weight: bold;
	padding: 9px 0 0 23px;
	margin: 0 10px 8px;
}
QMenu::item:selected {	background-color: #314159; } /* The selected state of a menu item (Hover and selected state is the same */
QMenu::item:disabled {	color: #8a8784; }

QMenu::separator { /* The horizontal line dividing some menu items */
	height:1px;
	margin-left:7px;
	margin-right:7px;
	background: #6b6865;
}

QMenu::icon { } /* Unforunately doesn't actually do anything right now */
QMenu::right-arrow { } /* The arrow pointing ot the right in some menu items (Check Self menubar item) . Use Image to change this*/

QMenu::indicator { /* Sets the checkbox of non-excluse items.  (Right Click the Toolbar. Server tabs, Status Bar and so should have a checkbox */
     width: 15px;
     height: 15px;
	 border: 1px solid #70685f;
	 border-radius: 0px;
}
QMenu::indicator:non-exclusive:unchecked, /** Sets the checkbox of non-excluse items.  (Right Click the Toolbar. Server tabs, Status Bar and so should have a checkbox */
QMenu::indicator:non-exclusive:unchecked:selected {      
    background: none;
}
QMenu::indicator:non-exclusive:checked, /* Sets the checkbox of non-excluse items.  (Right Click the Toolbar. Server tabs, Status Bar and so should have a checkbox */
QMenu::indicator:non-exclusive:checked:selected {
	background-image:url('qss/Steam/Dialog/checkbox.png');
	background-location: center;
	background-repeat: none;
	background-color: transparent;
}


/* ######################################################### */

/* ######################################################### */

/* ######################################################### */


/* ----------------------------------------------------------------	*/
/* 								TreeView 							*/
/* ---------------------------------------------------------------- */


QTreeView, /* The QTreeView (Channel and server list) that you can open and close in multiple levels */   
QTreeWidget {	
	border: 1px solid  #4d4b48;
	border-radius: 0px;
	border-right-width: 0px;
	border-bottom-right-radius: 0px;
	border-top-right-radius: 0px;
	background-attachment:fixed;
	show-decoration-selected: 0;
	padding: 2px 8px;
	background-color: transparent;
	border: 0px solid transparent;
	color: #a5a3a0;
	qproperty-alternatingRowColors: 0;
}

QTreeView::item {
	border: 2px solid transparent;
	border-radius: 0px;
}
QTreeView::item:hover {
	background-color: qlineargradient(spread:pad, x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #314159, stop: 0.8 transparent, stop:1 transparent);
	color: #e3e0dd;	
}
QTreeView::item:selected:active{
	background-color: qlineargradient(spread:pad, x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #314159, stop: 0.8 transparent, stop:1 transparent);
	color: #e3e0dd;
}
QTreeView::branch:hover 		{	background-color: transparent;	}
QTreeView::item:selected:!active{	background-color: qlineargradient(spread:pad, x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #5c59569, stop: 0.8 transparent, stop:1 transparent);	}


/* ----------------------------------------------------------------	*/
/* 								Tree Branch							*/
/* ---------------------------------------------------------------- */

QTreeView::branch:selected {	background-color: transparent;	}

QTreeView::branch:has-siblings:adjoins-item,
QTreeView::branch:!has-children:!has-siblings:adjoins-item { border-image: none; }

QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
	border-image: none;
	background-color: transparent;
	image: url(qss/Steam/Misc/TreeView/tree-collapse-normal.png);
}
QTreeView::branch:has-children:!has-siblings:closed:hover,
QTreeView::branch:closed:has-children:has-siblings:hover {
	border-image: none;
	background-color: transparent;
	image: url(qss/Steam/Misc/TreeView/tree-collapse-hover.png);
}
QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings  {
	border-image: none;
	background-color: transparent;
	image: url(qss/Steam/Misc/TreeView/tree-expand-normal.png);
}
QTreeView::branch:open:has-children:!has-siblings:hover,
QTreeView::branch:open:has-children:has-siblings:hover  {
	border-image: none;
	background-color: transparent;
	image: url(qss/Steam/Misc/TreeView/tree-expand-hover.png);
}


/* ----------------------------------------------------------------	*/
/* 							InfoFrame | InfoView					*/
/* ---------------------------------------------------------------- */

InfoFrame { /* Right half of the mainwindow, with connection details, server groups and so. You can skin the actual text using the .Tpl files */
	background-color: transparent;
	border: 0px solid transparent;
	color: #8b959b;
	font-size: 10px;
	font-family: Arial, Helvetica, Verdana;
	padding: 2px 2px 2px 10px;
}


/* ----------------------------------------------------------------	*/
/* 			      	QDialog | Options Screen			*/
/* ---------------------------------------------------------------- */

QDialog	{  	/* Pop up dialogs, such as the connection dialog, but even Options screen. */
	background-color: #383635; 
}
	
OptionsDialog { /* Can also be skinned using QDialog, but seeing this screen is far larger than most QDialogs you can do more specific skinning by using this class instead */
 }


ImprovedWidget { /* The base window of some dialogs (Like Permission, bookmarks, etc). Very much recommended if you want to use a background in those windows. */
	background-image:url('qss/Steam/MainWindow/top-background.jpg');
	background-position: right top;
	background-repeat: repeat-x;
 	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2f2e2d, stop:1 #383635);
}

QWidget::pane { /* The QWidget pain outside of Mainwindow (The MainWindow one was already defined more specific before */
	background-color: #383635;
	color: #a5a3a0;
} 

QTabWidget#permTabWidget::pane 	{	border: 1px solid #4d4b48;  }   /* Grey border around the pane widget in the permission screen */

/* ----------------------------------------------------------------	*/
/* 			      	QGroupBox | Options Container      				*/
/* ---------------------------------------------------------------- */

QGroupBox         { 	border: none; padding-top: 25px; margin-top: 5px; }

QGroupBox::title  { color: #ffffff; }
 



/* ----------------------------------------------------------------	*/
/* 				QLabel | Header text for options window				*
/* ---------------------------------------------------------------- */


QWidget#HeadlineLabel { /* In the Options Dialog there's a bar at the top of the screen. You can use that using the given class */
	background-image:url('qss/Steam/headlinelabel.png');
	background-repeat: repeat-x;
	background-color: none;
 }
 
 /* A lot of Labels have their own specific name. You could basically give every menu item their own look, but it would be very illogical to do so. However, some labels stand out quite a bit from the rest and would be nice to skin */
QLabel#OptionsHeadlineTitleLabel { /*  Top line of options category */
	color: #fff8ef;
	text-transform: uppercase;
	font-size: 16px;
	font-weight: normal;
	padding: -4px;
}

QLabel#OptionsHeadlineDescriptionLabel{ /*  Bottom line of options category */ 
	color: #c7c4ba;
	font-size: 11px;
	font-variant: small-caps;
	font-weight: normal;
}


/* ----------------------------------------------------------------	*/
/* 								Splitter							*/
/* ---------------------------------------------------------------- */

 /* The handles used to resize certain portions of Teamspeak. In the main window there is a splitter between the treeview/infoframe and the chattab. There is also a spittler between the Treeview and Infoframe. You can also collapse widgets completely using a splitter. */ 
QSplitter::handle {
	background-color: transparent;
}
QSplitter::handle:vertical { /* You can also use the :horizontal state for horizontal sliders, however no need for that now */
	margin-left: 2px; /* Margin is used to create some extra distance between the treeview and infoframe. Especially with a scrollbar it can get very cluttered otherwise */
	margin-right: 2px;
}

/* ----------------------------------------------------------------	*/
/* 								QStatusBar							*/
/* ---------------------------------------------------------------- */

 QstatusBar { /* Bottom in the far bottom (Is enabled by right clicking the tool bar) */ 
	padding-left:4px;
	padding-right:4px;
}
 QStatusBar::item { /* Leave like this. Fixes a small bug in the bottom */
 	padding: 0px 2px;
	background-color: transparent;
}

QSizeGrip { /* With this item you can resize windows. Feel free to add an image or so */
	background-color: transparent;
	image: url("qss/Steam/resize-dots.png");
	width: 14px;
	height: 14px;
}

/* ----------------------------------------------------------------	*/
/* 								QToolBar							*/
/* ---------------------------------------------------------------- */

QToolBar { /* Dragable toolbar with shortcut icons in the mainwindow */
	margin-left: 10px;
	margin-right: 10px;
	background-color: transparent;
	border: 0px solid transparent;
	spacing: 15px; /* Spacing between each button */ 
}

 QToolBar::handle { /* Handle at the left of the horizontal toolbar which you can drag to place somehwere else */ 
    background-image: none;
	background-color: transparent;
	width: 10px;
	height: 18px;
	margin-left: 3px;
 }
 
 QToolBarSeparator {  } /* Seperator between some menu items. Don't know how to skin this */

/* ################################## */
/* The buttons on the toolbar start here. 		*/
/* ################################## */

QToolBar QToolButton { /* Button on Toolbar */  
	border: 5px solid transparent;
	border-radius: none;
	background-color: none;
} 

QToolBar QToolButton[popupMode="1"] { /* Default state of toolbutton with dropdown menu (Such as the Away button or Mute Speakers */
	border: 1px solid transparent;
	border-radius: none;
	background-color: transparent;
	padding-right: 14px;
	color: #a5a3a0; /* Use color to change the color of the arrow for the popup menu */
}

QToolBar QToolButton:hover {  /* hover state of the toolbuttons */
	background-color: #222222;
	border-image: url('qss/Steam/Misc/pushbutton-hover.png');
	border-width: 5px; 
}

QToolBar QToolButton[popupMode="1"]:hover { /* hover state of the toolbutton with dropdown menu (Such as Away or Mute Output */
	background-color: #222222;
	border-image: url('qss/Steam/Misc/pushbutton-hover.png') ;
	border-width: 5px;
}

QToolBar QToolButton:checked,  /* state of the toolbutton when an option is selected (Such as having your microphone muted) */
QToolButton#serverQueryAdvancedButton:checked, 
QToolBar QToolButton:pressed  /* Toolbutton state when it's clicked */ 
{
	border-image: url('qss/Steam/Misc/pushbutton-down.png');
	border-width: 5px;
	background-color: #222222;
}

QToolBar QToolButton[popupMode="1"]:checked {
	border-image: url('qss/Steam/Misc/pushbutton-down.png');
	border-width: 5px;
	background-color: #222222;
}

QToolBar QToolButton:disabled {
	border: 5px solid transparent;
	border-image: none;
	background-color: transparent;
	background-image: none;
	image: none;
}
	

QToolBar QToolButton::menu-button {	border: 1px solid transparent; width: 12px;  } 
QToolBar QToolButton::menu-button:hover { }

QToolBar QToolButton::menu-arrow { right: 4px; } /* Change the dropdown menu button on a toolbutton using image */
QToolBar QToolButton::menu-arrow:open { right: 3px; } /* Sets the open state of the menu arrow */

/* ################################## */
/* ToolButtons outside of the main window start here	*/
/* ################################## */

QToolButton#newBookmarkButton, 
QToolButton#newBookmarkFolderButton, 
QToolButton#removeBookmarkButton {
	border-image: url('qss/Steam/altbutton-normal.png');
	border-top: 0px;
	border-right: 2px;
	border-bottom: 0px;
	border-left: 2px;
	background-color: transparent;
	padding: 0px;
	max-height: 18px;
	margin: 0px 3px;
	color: #a5a3a0;
}
QToolButton#newBookmarkButton:hover, 
QToolButton#newBookmarkFolderButton:hover, 
QToolButton#removeBookmarkButton:hover {
	color: #f2f2f2;	
}

QToolButton { /* Changes all tool buttons inside the settings menu to the following */
	border-image: none;
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #4a4846);
	background-image: none;
	border: 1px solid #706d69;
	border-radius: 0px;
	text-align: left;
	padding-left: 5px;
	padding-right: 10px;
	color: #d1cfcd;		
}

QToolButton:hover { 
	border-image: none;
	background-image: none;
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #696663, stop:1 #4b4947);
	border: 1px solid #99938d;
	color: #e5e2df;
}

QToolButton:disabled {
	background-color: transparent;
	border: 1px solid #4d4b48;
	color: #4d4b48;
}
	
QToolButton#serverQueryStopButton:disabled, 
QToolButton#serverQueryRestartButton:disabled {
	background-color: transparent;
	border-color: #4d4b48;
	color: #4d4b48;
}
QToolButton#searchClearButton, 
QToolButton#appScanImportButton, 
QToolButton#appScanReloadButton, 
QToolButton#fbDirUpButton, 
QToolButton#fbRootButton, 
QToolButton#fbRefreshButton, 
QToolButton#fbUploadButton, 
QToolButton#fbDownloadButton, 
QToolButton#fbCreateDirectoryButton, 
QToolButton#fbDeleteButton, 
QToolButton#fbFilterButton, 
QToolButton#descEditButton,
QToolButton#fbViewIconsButton, 
QToolButton#fbViewListButton, 
QToolButton#filterGoButton, 
QToolButton#clientUpdateButton, 
QToolButton#filterClearButton, 
QToolButton#banAddButton, 
QToolButton#banRemoveButton, 
QToolButton#banEditButton, 
QToolButton#complainRemoveButton, 
QToolButton#foregroundColorSelectButton, 
QToolButton#backgroundColorSelectButton, 
QToolButton#EmoticonButton, 
QToolButton#iconToolButton {
	border-image: none;
	background-color: transparent;
	border: 1px solid transparent;
	border-radius: none;
}
QToolButton#searchClearButton:hover, 
QToolButton#appScanImportButton:hover, 
QToolButton#appScanReloadButton:hover, 
QToolButton#fbDirUpButton:hover, 
QToolButton#fbRootButton:hover, 
QToolButton#fbRefreshButton:hover, 
QToolButton#fbUploadButton:hover, 
QToolButton#fbDownloadButton:hover, 
QToolButton#fbCreateDirectoryButton:hover, 
QToolButton#fbDeleteButton:hover, 
QToolButton#fbFilterButton:hover, 
QToolButton#descEditButton:hover,
QToolButton#fbViewIconsButton:hover, 
QToolButton#fbViewListButton:hover, 
QToolButton#filterGoButton:hover, 
QToolButton#clientUpdateButton:hover, 
QToolButton#filterClearButton:hover, 
QToolButton#banAddButton:hover, 
QToolButton#banRemoveButton:hover, 
QToolButton#banEditButton:hover, 
QToolButton#complainRemoveButton:hover, 
QToolButton#foregroundColorSelectButton:hover, 
QToolButton#backgroundColorSelectButton:hover, 
QToolButton#EmoticonButton:hover, 
QToolButton#iconToolButton:hover {
	border-image: none;
	background-color: transparent;
	border-color: #4d4b48;
	color: #4d4b48;
}
QToolButton#TextFormatButton,
QToolButton#toolButtonBold, 
QToolButton#toolButtonItalic, 
QToolButton#toolButtonUnderLine, 
QToolButton#toolButtonFColor, 
QToolButton#TextFormatButton:hover, 
QToolButton#toolButtonBold:hover, 
QToolButton#toolButtonItalic:hover, 
QToolButton#toolButtonUnderLine:hover, 
QToolButton#toolButtonFColor:hover 
{
	border-image: none;
	background-color: transparent;
	border: 1px solid transparent;
	border-radius: 0px;
}

QToolButton#toolButtonBold:checked,
QToolButton#toolButtonItalic:checked, 
QToolButton#toolButtonUnderLine:checked, 
QToolButton#toolButtonFColor:checked, 
QToolButton#TextFormatButton:checked 
{
	border-image: none;
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #557dab, stop:1 #314159);
	border: 1px solid transparent;
	border-radius: 0px;
}
	
QToolButton#fbViewIconsButton:checked, 
QToolButton#fbViewListButton:checked 
{
	border-image: none;
	background-color: transparent;
	border-color: #4d4b48;
	color: #4d4b48;
}

/* ----------------------------------------------------------------	*/
/* 						Pushbutton | Ok, Cancel, etc	*/
/* ---------------------------------------------------------------- */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-52fd5883-f9f9-4af2-ab8c-de26193fcbb3 */
/* #### */

QPushButton { /* normal button */
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #4a4846);
	color: #d1cfcd;
	border: 1px solid #706d69;
	border-radius: 0px;
	min-width: 46px;
	height: 12px;
	text-align: left;
	text-transform: uppercase;
	padding-left: 5px;
	padding-right: 5px;
}

QPushButton:hover,
QPushButton:default { /* The default selected pushbutton */
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #696663, stop:1 #4b4947);
	border-color: #99938d;
	color: #e5e2df;
}

QPushButton:disabled {
	background-color: transparent;
	border-color: #4d4b48;
	color: #4d4b48;
}

/* ----------------------------------------------------------------	*/
/* 				 ListView | Options list, Profiles list				*/
/* ---------------------------------------------------------------- */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-3e981b14-7ec7-4726-ab2b-9ce3c3c097b0 */
/* #### */

QListView { /* List for multiple things. Indenties list, option categories in sections screen, but also part of the dropdown menu of comboboxes */
	background-color: #2e3132;
	border-image: url('qss/Steam/Dialog/listview.png');
	border-top: 4px transparent;
	border-bottom: 4px transparent;
	border-right: 4px transparent;
	border-left: 4px transparent;
	color: #cbbf57;
	selection-color: #e3e0dd;
	selection-background-color: #314159;
	font-weight: bold;
}

QListView::item:hover,
QListView::item:selected:active,
QListView::item:selected:!active		{	background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #314159, stop:1 transparent);	}

QListWidget#identitiesListWidget,
QListView#fileListView::item:hover,
QListView#fileListView::item:selected 	{	background-color: #2e3132;	}


/* ----------------------------------------------------------------	*/
/* 						 ComboBox | Dropdown Menu	*/
/* ---------------------------------------------------------------- */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-bcbaea83-e720-403d-b175-7dc186b83ff1 */
/* #### */
QComboBox 
{
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #4a4846);
	color: #d1cfcd;
	border: 1px solid #706d69;
	border-radius: 0px;
	min-width: 30px;
	height: 20px;
	text-align: left;
	padding: 0px 5px 0px 5px;
}

QComboBox:disabled { /* State of combobox that is currently disabled */
	background-color: transparent;
	border-color: #4d4b48;
	color: #4d4b48;
}


QComboBox:!editable:on { } /* State of combobox that is open and not editable */
QComboBox:editable:on { }	 /* State of comboxo that is open and editable */
QComboBox:on {	/* State of open combobox. Use QComboBox::drop-down:on to skin the arrow part when it's open */
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #4a4846);	
}

QComboBox QAbstractItemView /* Use this to skin the dropdown menu of a combobox. Transparency is not supported */
{
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #666666, stop: 1 #333333);
	border: 1px solid #4d4b48;
	border-radius: 0px;
	border-image: none;
	color: #d1cfcd;
	outline: none;
}

QComboBox QListView { /* Use this for the selection in the dropdown menu */
	selection-color: #ffffff;
	selection-background-color: #314159;
}

QComboBox::drop-down { /* Part of the combobox that has the drop down arrow in it. Use this if you want to have a clickable image for the dropdown menu */
	color: #d1cfcd;
	subcontrol-origin: padding;
	subcontrol-position: right; /* Use subcontrol position to set the side of the arrow. In this case the arrow at the right side of the box */
	width: 15px;
	border: 0px solid transparent;
	background-color: transparent;
}

QComboBox::down-arrow 				{	image: url('qss/Steam/Misc/Scrollbar/Down-arrow.png'); }


/* ################################## */
/* Spinbox || Scrolling numbers option			*/
/* ################################## */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-62939df0-87e4-44fe-9753-cf54fedd0bb5 */
/* #### */

QSpinBox, 
QDoubleSpinBox#delayPTTSpinBox 
{
	background: #393736;
	border: 1px solid #6b6865;
	border-radius: 0px;
	padding: 2px;
	color: #e5e2df;
	selection-background-color: none;
}

QSpinBox::up-button,
QDoubleSpinBox::up-button { /* skin the up button */ 
    width: 18px;
	padding-top: 3px;
	border: 0px solid transparent;
	background: transparent;
	border-radius: 0px;
	subcontrol-position: top right; /* use this to select side of the button and arrow */
}

QSpinBox::up-arrow,
QDoubleSpinBox::up-arrow { /* skin the up arrow */ 
    image: url('qss/Steam/Misc/Scrollbar/up-arrow.png');
}

QSpinBox::down-button,
QDoubleSpinBox::down-button { /* skin the down button */
    width: 18px;
	padding-bottom: 4px;
	border: 0px solid transparent;
	background: transparent;
	border-radius: 0px;
	subcontrol-position: bottom right;  /* use this to select side of the button and arrow */
}

QSpinBox::down-arrow,
QDoubleSpinBox::down-arrow { /* skin the down arrow */
    image: url('qss/Steam/Misc/Scrollbar/down-arrow.png');
 }


QSpinBox::up-arrow:disabled,  /* skin the selected up and down arrows in both disabled and off state */ 
QSpinBox::up-arrow:off,
QSpinBox::down-arrow:disabled,
QSpinBox::down-arrow:off 		{	image: none; background: none; }


/* ################################## */
/* Vertical Scrollbar. You can en-/disable the scrollbar in the config part */
/* ################################## */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-8e7e0fb0-d01e-4860-8324-19a820a7177c  */
/* #### */

QScrollBar:vertical { /* The area behind the scrollbar covering entire height.   */  
	background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #4d4b48, stop:1 transparent);
	width: 13px; /* set width to zero to hide scrollbar entirely. Can look quite clean and scrolling still works with mousewheel.  */
	margin: 18px px; /* Takes the height of the buttons + 3 extra pixels to leave some free space between handle and buttons */
	border-radius: 0px;
	border: 0px solid transparent;
}

QScrollBar::handle:vertical { /* The handle you scroll with */
	image: url("qss/Steam/Misc/Scrollbar/scroll-gripper.png");
	image-position: center; /* image is used as a small gripper in the center of the scrollbar.. You can also use background-image to use two images  */
	background-color: #575552;
	border: 0px solid transparent;
	border-radius: 0px;
	min-height: 18px;
}
QScrollBar::handle:vertical:hover { /* state when you hover over the handle */
	background-color: #64615e;
}

QScrollBar::sub-line:vertical { /* button to scroll up */
	border: 0px solid #575552;
	border-radius: 0px;
	background-color: #575552;
	height: 18px;
	subcontrol-position: top;
	subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical:hover { /* hover state of button to scroll up */
	background-color: #64615e;
}

QScrollBar::up-arrow:vertical { /* arrow to scroll up with */
	image: url("qss/Steam/Misc/Scrollbar/up-arrow.png");
	top: 2px;
}

QScrollBar::add-line:vertical  { /* Button to scroll down */
	border: 0px solid #575552;
	border-radius: 0px;
	background-color: #575552;
	height: 18px;
	padding-top: 2px;
	subcontrol-position: bottom;
	subcontrol-origin: margin;
}
QScrollBar::add-line:vertical:hover { /* hover state of button to scroll down */
	background-color: #64615e;
}

QScrollBar::down-arrow:vertical { /* arrow to scroll down with */
	image: url("qss/Steam/Misc/Scrollbar/down-arrow.png");
	bottom: 3px; 
}

QScrollBar::add-page:vertical, /* area between the scroll down button and the handle */
QScrollBar::sub-page:vertical { /* area betwen the scroll up button and the handle */
	background: none;
}


/* ################################## */
/* Horizontal Scrollbar || Is disabled. Set height to enable */
/* ################################## */


QScrollBar:horizontal { /* background of horizontal scrollbar.  */
	background-color: qlineargradient(x1:0, y1:0, x2:1, y2:0, stop:0 #4d4b48, stop:1 transparent); 
	/*############################### */
	height: 0px; /* set height to zero to hide scrollbar entirely */ /*###########################################################*/
	/* ############################## */
	margin: 0px 22px; /* Takes the width of the buttons + 3 extra pixels to leave some free space between handle and buttons */
	border-radius: 0px;
	border: 0px solid transparent;
}

QScrollBar::handle:horizontal { /* Same story but for horizontal */ 
	image: url("qss/Steam/Scrollbar/scroll-gripper.png");
	image-position: center;
	background-repeat: no-repeat;
	background-color: #575552;
	border: 0px solid transparent;
	border-radius: 0px;
	min-width: 20px;
}
QScrollBar::handle:horizontal:hover {
	background-color: #64615e;
}

QScrollBar::add-line:horizontal  { 
	border: 0px solid #575552;
	border-radius: 0px;
	background-color: #575552;
	width: 20px;
	subcontrol-position: right;
	subcontrol-origin: margin;
}
QScrollBar::sub-line:horizontal {
	border: 0px solid #575552;
	border-radius: 0px;
	background-color: #575552;
	width: 20px;
	subcontrol-position: left;
	subcontrol-origin: margin;
}
QScrollBar::add-line:horizontal:hover  {
	border: 0px solid #64615e;
	border-radius: 0px;
	background-color: #64615e;
	width: 20px;
	subcontrol-position: right;
	subcontrol-origin: margin;
}
QScrollBar::sub-line:horizontal:hover {
	border: 0px solid #64615e;
	border-radius: 0px;
	background-color: #64615e;
	width: 20px;
	subcontrol-position: left;
	subcontrol-origin: margin;
}
QScrollBar::left-arrow:horizontal {
	background: url("qss/Steam/Scrollbar/left-arrow.png");
	background-repeat: none;
}
QScrollBar::right-arrow:horizontal {
	background: url("qss/Steam/Scrollbar/right-arrow.png");
	background-repeat: none;
}
QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
	background: none;
 }

/* ################################## */
/* TABLEVIEW AND HEADER					*/
/* ################################## */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-46f6e7a6-6222-4c23-80e4-36da072fbd8d */
/* #### */

QHeaderView::section { /* Top line of a table */ 
	background-color: #4d4b48;
	color: #a5a3a0;
	height: 23px;
	padding-left: 2px;
	border: 0px solid;
	border-radius: 0px;
}

QHeaderView::down-arrow { /* sets the arrow that shows when you sort on a section */
	image: url('qss/Steam/Misc/Scrollbar/down-arrow.png');
}

QHeaderView::up-arrow { /* sets the arrow that shows when you sort on a section */
    image: url('qss/Steam/Misc/Scrollbar/up-arrow.png');
}

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-326026c6-9228-4507-97af-c1e08013d3a5 */
/* #### */
	
 
QTableView { /* Table view like in the hotkeys settings or server list */
	background-color: qlineargradient(x1: 0, y1: 0, x2:0, y2:1, stop:0 #3f3d3b, stop:0.3 #242322, stop:1 #242322);
	border: 1px solid #4d4b48;
	border-radius: 0px;
	color: #a5a3a0;
	selection-background-color: #314159; /* Sets the background color on the currently selected item */
	alternate-background-color: transparent; /* you can use a different background color for alternating items */
	gridline-color: #3f3d3b; /* Color of the lines dividing different table items */ 
}

QTableView::item 		{	border: 1px solid transparent;	}
QTableView::item:hover	{	background-color: #314159;		}

/* ################################## */
/* QSLIDER || volume control						*/
/* ################################## */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-8add32f5-a438-4cc5-8e6d-ac3784888b07 */
/* #### */

MainWindow ImprovedToolBar QLabel  { /* Set this to control the background of the master volume icon */
	background: transparent;
}


QSlider:horizontal	{	margin-right: 10px;	}
QSlider:vertical	{	margin-right: 0px; }

QSlider::groove:horizontal {
	border: 0px solid transparent;
	height: 1px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
	background-color: #9e9995;
	margin: 2px 0;
}

QSlider::add-page:horizontal { } /* This can be used to skin the parts left of the slider */
QSlider::sub-page:horizontal { } /* This can be used to skin the parts right of the slider */

QSlider::handle:horizontal {
	background-color: #9e9995;
	border: 0px solid;
	width: 8px;
	height: 14px;
	margin: -4px 0; /* Negative margin is used to make sure it's larger than the 1px of the groove */
	border-radius: 0px;
}

QSlider::groove:vertical {
	border: 0px solid;
	width: 1px; 
	background-color: #9e9995;
	margin: 0 2px;
}

QSlider::handle:vertical {
	background-color: #9e9995;
	border: 0px solid;
	height: 14px;
	width: 8px;
	margin: 0px -4px;
	border-radius: 0px;
}

/* ################################## */
/* RADIOBUTTON										*/
/* ################################## */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-706f97ed-ede6-4429-a0bf-8112bdb51c84 */
/* #### */

QCheckBox { /* Option you can check. Seperate options you can turn on/off. This is the entire option (Including text)*/ 
    spacing: 8px; /* space between the checkbox and the text belonging to it */
	margin-top: 5px;
	color: #a5a3a0;
}

QCheckBox::indicator { /*  The actual box that you check. */
    width: 15px;
    height: 15px;
	border: 1px solid #70685f;
	border-radius: 0px;
}

QCheckBox::indicator:unchecked, /* state of the box when it's unchecked */
QCheckBox::indicator:unchecked:hover, /* state when on mouse when unchecked */
QCheckBox::indicator:unchecked:pressed {  /* state of the box when it's unchecked but pressed (mouse click) */
	background-color: transparent;
}

QCheckBox::indicator:checked, /* State of the box when it's checked */
QCheckBox::indicator:checked:hover, /* State of the box on mouse over */
QCheckBox::indicator:checked:pressed { /* State of the box when it's checked and pressed (Mouse click) */
     background-image:url('qss/Steam/Dialog/checkbox.png');
	 background-position: center;
	 background-repeat:no-repeat;
}

QCheckBox::indicator:indeterminate:hover,
QCheckBox::indicator:indeterminate:pressed {
     background: qlineargradient(x1: 0, y1: 0, x2: 0.5, y2: 0.5, stop: 0 #FB8E00, stop: 1 #FB8E00);
	 border: 1px solid #333333;
	 border-radius: 0px;
}

/* ################################## */
/* RADIOBUTTON										*/
/* ################################## */

/* #### */
/* http://qt-project.org/doc/qt-4.7/stylesheet-examples.html#id-95ac8fc0-aa44-4a96-94d4-99664ffabd58 */
/* #### */

QRadioButton { /* Text belonging to a radiobutton option */
	color: #a5a3a0;
}
 
QRadioButton::indicator { /* the actual radiobutton you click to select an option */
    width: 15px;
    height: 15px;
	margin-top: 5px;
	Background-image:url('qss/Steam/Misc/radiobutton.png');
}

QRadioButton::indicator:unchecked:pressed	{     background-image:url('qss/Steam/Misc/radiobutton-checked.png');	}
QRadioButton::indicator::checked 			{     background-image:url('qss/Steam/Misc/radiobutton-checked.png');	}
QRadioButton::indicator:checked:hover		{     background-image:url('qss/Steam/Misc/radiobutton-checked.png');	}
QRadioButton::indicator:checked:pressed	{     background-image:url('qss/Steam/Misc/radiobutton.png');			}

/* ################################## */
/* QLABEL												*/
/* ################################## */

QLabel { /* Text label near most input and option fields. Most seperate labels can be defined on their own, but there's not really a reason to do this. Checkboxes and Radiobuttons fall under their own class! */
	color: #a5a3a0;
}

/* ################################## */
/* EXCLUDE BACKGROUND						*/
/* ################################## */

QStackedWidget,
QWidget#advancedWidget,
QWidget#connectToWidget, 
QWidget#switchToWidget,
QWidget#activateWidget, 
QWidget#recordingWidget, 
QWidget#ToolbarStretcher, 
QWidget#avatarWidget, 
QWidget#statusChangeWidget, 
QWidget#disableWidget
{
	background: none;
	color: #d1c7ba;
}

/* ################################## */
/* INCLUDE BACKGROUND						*/
/* ################################## */

FriendFoeManager,						/* AREA Background for friends list */ 
ServerLogView, 
LogDisplay,
ClientLogView, 
FileBrowser, 
QWidget#TextOptionDisplay,	/* Background of text options popup */
BookmarksManager, /* AREA Background for Bookmark Manager */
UserVolumeWidget, /* Right click user -> Change volume popoup */
EmoticonsDisplay, /* Emoticon Popup */ 
QDialog#BanDialog, /* Dialog when you ban a user */
QWidget#ConnectionInfoDialog, /*Background for Self -> Connection Info */  
QWidget#UrlCatcherViewer, /* Background for Tools -> Collected Urls */
QWidget#ServerConnectionInfoDialog,		/* Connection Info Panel */
QWidget#ServerQueryView,				/* AREA Background for Server Query Panel */ 
QWidget#addPropertiesWidget,  
QWidget#OfflineMessagesDialog, 
QWidget#sound3Dwidget, 					/* 3D Sound Panel */ 
QWidget#sound3DTestWidget, 				/* 3D Sound Test Panel*/ 
QWidget#CustomizeToolbar,
QWidget#Permissions
{
	background: #383635;
}


/* ################################## */
/* SETUP WIZARD 									*/
/* ################################## */

QWizard QWidget,
QWizard QLabel 
{
	background: #383635;  
	selection-background-color: #383635;  
	selection-color: #000;
}

/* ----------------------------------------------------------------	*/
/* 							Uncategorized					*/
/* ---------------------------------------------------------------- */

QFrame#line { /* Horizontal Line in the Connect dialog. Normally shows as a little sunken frame just a few pixels high */
	background: #a5a3a0;
	border: 0px solid transparent;
	max-height: 1px;
}

QAbstractButton { } /* Don't use this */



/* ################################## */
/* SERVER LIST AND CONTACTS SPECIFIC/
/* ################################## */

QFrame#toolBox { }/* Server List dialog. Not really usable as far as I know */

QWidget#locationGroupBox, /* first box of server list */
QWidget#usersGroupBox,
QWidget#maxSlotsGroupBox,
QWidget#passwordGroupBox,
QWidget#createChannelsGroupBox {
	background-color: transparent;
	margin: 4px 0px;
	padding: 5px 2px;
}

QToolBox::tab {  /* Different tabs in the Server list screen. Only works properly with Plastique setting */
	background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #4a4846);
	color: #d1cfcd;
	border: 1px solid #706d69;
	border-radius: 0px;
	height: 24px;
	padding-left: 5px;
	padding-right: 10px;
}

QToolBox::tab:selected { /* Selected state of the toolbox tabs */
	color: #ffffff;
	border-color: #ffffff;
}
	

QWidget#page1, /* The area with options when you press Advanced or Standard Filter in the Server lists dialog */
QWidget#page2,
QWidget#pageGeneral, /* first box of contacts */
QWidget#pageDisplay,
QWidget#pageIgnore,
QWidget#pageWhisper {
	background-color: #383635;
	border: 1px solid #4d4b48;
	border-radius: 0px;
}

QToolBoxButton { /* Button opening and closing (Advanced Filter/Standard Filter in Server Lists). These buttons don't have different states that I am aware of. */
	background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #5c5956, stop:1 #4a4846);
	border: none;
	color: #d1cfcd;
}

/* ################################## */
/* CONNECTION INFO DIALOG STARTS HERE */
/* ################################## */

QTabWidget::tab-bar { /* Sets the tabs in the center */
	alignment: center; 
}

QTabWidget::pane { /* Changes the background of the tabwidget pane to the same as listview */
	background-color: #2e3132;
	border-image: url('qss/Steam/Dialog/listview.png');
	border-top: 4px transparent;
	border-bottom: 4px transparent;
	border-right: 4px transparent;
	border-left: 4px transparent;
}

QTabWidget QLabel { /* Changes the text of the labels INSIDE the tabwidget to the same color as the listview */
	color: #cbbf57;
}

QTabBar::tab { /* Changes the size of the tabs so they're the same width as the window and changes the text size so it fits inside the tabs */
	min-width: 52;
	font-size: 9px;
}

/* ################################## */
/* MULTIPLE THINGS FALLING UNDER HELP MENU  */
/* ################################## */

QTextEdit#changeLogTextEdit {
	background-color: #2e3132;
	border-image: url('qss/Steam/Dialog/listview.png');
	border-top: 4px transparent;
	border-bottom: 4px transparent;
	border-right: 4px transparent;
	border-left: 4px transparent;
	color: #cbbf57;
}


/* ################################## */
/* CLOSE BUTTON OF THE TABS  */
/* ################################## */

MainWindow ImprovedTabBarCloseButton,
MainWindow ImprovedTabBarCloseButton:hover {
	background: none;
	border: none;
	border-image: none;
	subcontrol-position: left;
	image: none;
} 

/* ################################## */
/* TO-DO */
/* ################################## */

OfflineMessagesDialog { } /* Offline messages screen */
WhisperDialog { } /* whisper lists screen */
FileTransferView { } /* file transfer dialog */
ClientLogView { }
AboutDialog { } /* aobut teamspeak help menu */


/* ************************************************* */
/* Extra button names. Not needed right now */
/* 

QToolButton#serverQueryRunButton, 
QToolButton#serverQuerySingleStepsButton, 
QToolButton#serverQueryStopButton, 
QToolButton#serverQueryRestartButton, 
QToolButton#serverQueryAdvancedButton, 
QToolButton#serverQueryClearHighlightButton, 
QToolButton#newSQScriptButton, 
QToolButton#updateSQScriptButton, 
QToolButton#removeSQScriptButton,
QToolButton#idAddButton, 
QToolButton#idRemoveButton, 
QToolButton#idSelectDefaultButton, 
QToolButton#idImportButton, 
QToolButton#idExportButton, 
QToolButton#addGroupButton, 
QToolButton#removeGroupButton, 
QToolButton#renameGroupButton,
QToolButton#copyGroupButton, 
QToolButton#displayClientsButton, 
QToolButton#addClientButton, 
QToolButton#removeClientButton, 
QToolButton#makeCurrentChannelDefaultToolButton, 
QToolButton#improvedIdentityQualityButton, 
QToolButton#toolButtonIcon, 
QToolButton#copyServerIPButton, 
QToolButton#copyClientIPButton


/* ************************************************* */

